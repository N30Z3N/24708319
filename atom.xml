<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.qiantigers.top</id>
    <title>Qiantigers</title>
    <updated>2020-08-03T01:17:35.599Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.qiantigers.top"/>
    <link rel="self" href="https://www.qiantigers.top/atom.xml"/>
    <subtitle>晓看天色暮看云，行也思君，坐也思君。</subtitle>
    <logo>https://www.qiantigers.top/images/avatar.png</logo>
    <icon>https://www.qiantigers.top/favicon.ico</icon>
    <rights>All rights reserved 2020, Qiantigers</rights>
    <entry>
        <title type="html"><![CDATA[如何将必应Bing每日图片设置为网站背景]]></title>
        <id>https://www.qiantigers.top/post/bing-image-background/</id>
        <link href="https://www.qiantigers.top/post/bing-image-background/">
        </link>
        <updated>2020-08-01T05:41:07.000Z</updated>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<figure data-type="image" tabindex="1"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200801133802.png" alt="image-20200801133644026" loading="lazy"></figure>
<p>Bing每日图片相信每位使用过必应搜索的小伙伴都了解，网上也有很多关于如何将Bing每日图片设置为电脑壁纸的教程，甚至微软专门推出过一款Bing桌面的应用方便大家将必应的美图设置为电脑桌面壁纸。因为图片每日都不同并且每个图片后面都伴随一个小故事，受到了很多小伙伴的欢迎。</p>
<p>那么，如果可以把Bing的每日图片设置为博客背景会不会很酷炫呢？</p>
<h2 id="接口">接口</h2>
<p>通过抓包，我们可以发现这个链接<a href="https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1">https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx=0&amp;n=1</a></p>
<p>目前，国内版和国际版的每日图片内容显示一致，如果你想获取国际版的每日图片，只需将网址中的“cn”替换为“www”即可。</p>
<p>这里需要注意，链接中<strong>idx=0表示是显示当天的时间</strong>，如果<strong>要显示昨天的就将idx=0改为idx=1</strong>，以此类推。必应每日图片支持查看历史15天以内的图片。</p>
<p>抓包显示结果：</p>
<pre><code>{&quot;images&quot;:[{&quot;startdate&quot;:&quot;20180917&quot;,&quot;fullstartdate&quot;:&quot;201809171600&quot;,&quot;enddate&quot;:&quot;20180918&quot;,&quot;url&quot;:&quot;/az/hprichbg/rb/CalidrisCanutus_ZH-CN10519054459_1920x1080.jpg&quot;,&quot;urlbase&quot;:&quot;/az/hprichbg/rb/CalidrisCanutus_ZH-CN10519054459&quot;,&quot;copyright&quot;:&quot;在设得兰群岛觅食的红腹滨鹬，苏格兰 (© Andrew Parkinson/Minden Pictures)&quot;,&quot;copyrightlink&quot;:&quot;http://www.bing.com/search?q=%E7%BA%A2%E8%85%B9%E6%BB%A8%E9%B9%AC&amp;form=hpcapt&amp;mkt=zh-cn&quot;,&quot;title&quot;:&quot;&quot;,&quot;quiz&quot;:&quot;/search?q=Bing+homepage+quiz&amp;filters=WQOskey:%22HPQuiz_20180917_CalidrisCanutus%22&amp;FORM=HPQUIZ&quot;,&quot;wp&quot;:true,&quot;hsh&quot;:&quot;0a7f98e36e11f76ca5baea28f6ff86ac&quot;,&quot;drk&quot;:1,&quot;top&quot;:1,&quot;bot&quot;:1,&quot;hs&quot;:[]}],&quot;tooltips&quot;:{&quot;loading&quot;:&quot;正在加载...&quot;,&quot;previous&quot;:&quot;上一个图像&quot;,&quot;next&quot;:&quot;下一个图像&quot;,&quot;walle&quot;:&quot;此图片不能下载用作壁纸。&quot;,&quot;walls&quot;:&quot;下载今日美图。仅限用作桌面壁纸。&quot;}}
</code></pre>
<h2 id="获取图片">获取图片</h2>
<p>有了接口我们就可以直接利用正则表达式去匹配相关字符串了。</p>
<p><strong>以下是将必应每日图片通过php直接输出分辨率为1366X768图片的代码：</strong></p>
<pre><code>&lt;?php
    $str=file_get_contents('https://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1');
if (preg_match(&quot;/&lt;url&gt;(.+?)&lt;\/url&gt;/ies&quot;, $str, $matches)) {
    $imgurl='https://cn.bing.com'.$matches[1];
}
if ($imgurl) {
    header('Content-Type: image/JPEG');
    @ob_end_clean();
    @readfile($imgurl);
    @flush();
    @ob_flush();
    exit();
} else {
    exit('error');
}
?&gt;
</code></pre>
<p>考虑到直接输出图片会占用一定的主机带宽，我们也可以将Bing图片做302跳转。以下是通过php将输出图片302定向到Bing的代码：</p>
<pre><code>&lt;?php
    $str=file_get_contents('https://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1');
if (preg_match(&quot;/&lt;url&gt;(.+?)&lt;\/url&gt;/ies&quot;, $str, $matches)) {
    $imgurl='https://cn.bing.com'.$matches[1];
}
if ($imgurl) {
    header(&quot;Location: $imgurl&quot;);    //输出302跳转
} else {
    exit('error');
}
?&gt;
</code></pre>
<p>根据需要复制上面两段代码中的任意1段，将文件保存为bg.php或任意名称.php上传到你的服务器。访问http：//***.com/bg.php就可以看到必应每日图片了。</p>
<p><strong>考虑到有些网友的需求，增加了输出1920X1080高清图片的php代码。</strong></p>
<pre><code>&lt;?php
    $str=file_get_contents('https://cn.bing.com/HPImageArchive.aspx?idx=0&amp;n=1');
if (preg_match(&quot;/&lt;urlBase&gt;(.+?)&lt;\/urlBase&gt;/ies&quot;, $str, $matches)) {
    $imgurl='https://cn.bing.com'.$matches[1].'_1920x1080.jpg';
}
if ($imgurl) {
    header('Content-Type: image/JPEG');
    @ob_end_clean();
    @readfile($imgurl);
    @flush();
    @ob_flush();
    exit();
} else {
    exit('error');
}
?&gt;
</code></pre>
<h2 id="源码下载">源码下载</h2>
<p>代码已上传至Github，下载地址：<a href="https://github.com/fanmingming/bing">https://github.com/fanmingming/bing</a></p>
<h2 id="设置背景">设置背景</h2>
<p>设置网站背景的方法有很多，有些博客内置了设置背景URL，只要将这个URL地址填写为我们上传好的php绝对路径就大功告成了！</p>
<p>博主用的是Gridea静态博客，很便捷，将代码传至服务器，填写绝对路径即可。</p>
<p><em>注：参考于 https://www.fanmingming.com/article/bing-images-bg.html</em></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ShareList的安装和使用]]></title>
        <id>https://www.qiantigers.top/post/sharelist/</id>
        <link href="https://www.qiantigers.top/post/sharelist/">
        </link>
        <updated>2020-08-01T02:55:36.000Z</updated>
        <content type="html"><![CDATA[<h1 id="sharelist">ShareList</h1>
<figure data-type="image" tabindex="1"><a href="https://travis-ci.com/reruin/sharelist"><img src="https://api.travis-ci.com/reruin/sharelist.svg?branch=master" alt="Build Status" loading="lazy"></a></figure>
<p>ShareList 是一个易用的网盘工具，支持快速挂载 GoogleDrive、OneDrive ，可通过插件扩展功能。</p>
<h2 id="目录">目录</h2>
<ul>
<li><a href="#%E5%8A%9F%E8%83%BD%E8%AF%B4%E6%98%8E">功能说明</a></li>
<li><a href="#%E5%AE%89%E8%A3%85">安装</a></li>
<li><a href="#%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B">使用示例</a>
<ul>
<li><a href="#%E6%8C%82%E8%BD%BDGoogleDrive">挂载GoogleDrive</a></li>
<li><a href="#%E6%8C%82%E8%BD%BDOneDrive">挂载OneDrive（含世纪互联）</a></li>
<li><a href="#%E6%8C%82%E8%BD%BD%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98">挂载天翼云盘（支持账号密码挂载）</a></li>
<li><a href="#%E6%8C%82%E8%BD%BD%E5%92%8C%E5%BD%A9%E4%BA%91">挂载和彩云</a></li>
<li><a href="#%E6%8C%82%E8%BD%BD%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6">挂载本地文件</a></li>
<li><a href="#%E6%8C%82%E8%BD%BDGitHub">挂载GitHub</a></li>
<li><a href="#%E6%8C%82%E8%BD%BD%E8%93%9D%E5%A5%8F%E4%BA%91">挂载蓝奏云</a></li>
<li><a href="#%E6%8C%82%E8%BD%BDh5ai">挂载h5ai</a></li>
<li><a href="#%E6%8C%82%E8%BD%BDWebDAV">挂载WebDAV</a></li>
<li><a href="#%E6%8C%82%E8%BD%BDSFTP">挂载SFTP</a></li>
<li><a href="#%E8%99%9A%E6%8B%9F%E7%9B%AE%E5%BD%95">虚拟目录</a></li>
<li><a href="#%E8%99%9A%E6%8B%9F%E6%96%87%E4%BB%B6">虚拟文件</a></li>
<li><a href="#%E7%9B%AE%E5%BD%95%E5%8A%A0%E5%AF%86">目录加密</a></li>
<li><a href="#%E6%B5%81%E9%87%8F%E4%B8%AD%E8%BD%AC">流量中转</a></li>
<li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%AD%E8%BD%AC">自定义中转</a></li>
<li><a href="#%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B">忽略文件类型</a></li>
<li><a href="#%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%88">文件预览</a></li>
<li><a href="#%E6%98%BE%E7%A4%BAREADME">显示README</a></li>
<li><a href="#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1">负载均衡</a></li>
<li><a href="#%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E4%B8%8A%E4%BC%A0">文件/目录上传</a></li>
<li><a href="#WebDAV%E5%AF%BC%E5%87%BA">WebDAV导出</a></li>
<li><a href="#%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E6%9C%89%E6%95%88%E6%9C%9F">下载链接有效期</a></li>
<li><a href="#%E9%AA%8C%E8%AF%81%E7%A0%81%E7%9B%B8%E5%85%B3">验证码相关</a></li>
<li><a href="#Nginx(Caddy)%E5%8F%8D%E4%BB%A3%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">Nginx/Caddy反代注意事项</a></li>
</ul>
</li>
<li><a href="#%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91">插件开发</a></li>
</ul>
<h2 id="功能说明">功能说明</h2>
<ul>
<li>多种网盘系统快速挂载。</li>
<li>支持虚拟目录和虚拟文件。</li>
<li>支持目录加密。</li>
<li>插件机制。</li>
<li>国际化支持。</li>
<li>WebDAV导出。</li>
</ul>
<h2 id="使用示例">使用示例</h2>
<h3 id="挂载googledrive">挂载GoogleDrive</h3>
<h4 id="1-使用分享id挂载">1. 使用分享ID挂载</h4>
<p>由<a href="drive.gd">plugins/drive.gd.js</a>插件实现。</p>
<pre><code>挂载标示：gd
挂载内容：分享的文件ID
</code></pre>
<h4 id="2-使用官方api挂载">2. 使用官方API挂载</h4>
<p>由<a href="drive.gd.api">plugins/drive.gd.api.js</a>插件实现。</p>
<pre><code>挂载标示：gda  
挂载内容：  
  //应用ID/root?client_secret=应用机钥&amp;redirect_uri=回调地址&amp;refresh_token=refresh_token   
  /   
</code></pre>
<p>建议填写<code>/</code>，ShareList将自动开启挂载向导，按指示操作即可。</p>
<hr>
<h3 id="挂载onedrive">挂载OneDrive</h3>
<h4 id="1-使用分享id挂载-2">1. 使用分享ID挂载</h4>
<p>由<a href="plugins/drive.od.js">plugins/drive.od.js</a>插件实现。</p>
<pre><code>挂载标示：od  
挂载内容：分享的文件ID。 
</code></pre>
<p><strong>注意：单文件夹内最多显示30条结果。</strong></p>
<h4 id="2-使用官方api挂载-2">2. 使用官方API挂载</h4>
<p>由<a href="plugins/drive.od.api.js">plugins/drive.od.api.js</a>插件实现。</p>
<pre><code>挂载标示：oda
挂载内容：   
    OneDrive路径-&gt;应用ID|应用机钥|回调地址|refresh_token
    OneDrive路径
    /
</code></pre>
<p>建议填写<code>/</code>，ShareList将自动开启挂载向导，按指示操作即可。</p>
<p>对于不符合OneDrive安全要求的域名，将采用中转方式验证，<a href="https://github.com/reruin/reruin.github.io/blob/master/redirect/onedrive.html">查看中转页面</a>。<br>
<strong>注意：由于onedrive修改了政策，个人Microsoft帐户已无法通过向导进行绑定。<br>
需前往 <a href="https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade">Azure管理后台</a> 注册应用并获取  app_id 和 app_secret 。</strong></p>
<h4 id="3-使用官方api挂载世纪互联">3. 使用官方API挂载世纪互联</h4>
<p>由<a href="plugins/drive.odc.api.js">plugins/drive.odc.api.js</a>插件实现。</p>
<pre><code>挂载标示：odc
挂载内容：   
    //应用ID/路径?client_secret=应用机钥&amp;redirect_uri=回调地址&amp;refresh_token=refresh_token&amp;tenant=组织名   
    /
</code></pre>
<p>建议填写<code>/</code>，ShareList将自动开启挂载向导，按指示操作即可。</p>
<p><strong>注意：组织名是指网盘访问链接中 <code>https://***-my.sharepoint.cn/</code> 星号所示部分。</strong></p>
<h4 id="4-挂载onedrive-for-business">4. 挂载OneDrive For Business</h4>
<p>由<a href="plugins/drive.odb.js">plugins/drive.odb.js</a>插件实现。</p>
<pre><code>挂载标示：odb  
挂载内容：分享的url
</code></pre>
<p><strong>注意：单文件夹内最多显示30条结果。</strong></p>
<hr>
<h3 id="挂载天翼云盘">挂载天翼云盘</h3>
<h4 id="1-账号密码挂载cookie方式">1. 账号密码挂载（Cookie方式）</h4>
<p>由<a href="app/plugins/drive.189cloud.js">drive.189cloud.js</a>插件实现。</p>
<pre><code>挂载标示：ctcc
挂载内容：  
    //用户名/初始文件夹ID?password=密码 
    /
</code></pre>
<p>建议填写<code>/</code>，ShareList将自动开启挂载向导，按指示填写用户名密码即可。</p>
<h4 id="2-api方式挂载">2. API方式挂载</h4>
<p>由<a href="app/plugins/drive.189cloud.api.js">drive.189cloud.api.js</a>插件实现。</p>
<pre><code>挂载标示：ctc
挂载内容：   
    //应用ID/初始文件夹ID?app_secret=应用机钥&amp;redirect_uri=回调地址&amp;access_token=access_token   
    /
</code></pre>
<p>建议填写<code>/</code>，ShareList将自动开启挂载向导，按指示操作即可。<br>
<strong>注意：access_token每隔30天需手动更新一次，到期前24小时内访问对应路径时会有更新提示。</strong></p>
<h4 id="3-企业盘挂载">3. 企业盘挂载</h4>
<p>由<a href="app/plugins/drive.189cloud.business.js">drive.189cloud.business.js</a>插件实现。</p>
<pre><code>挂载标示：ctcb
挂载内容：  
    //用户名/初始文件夹ID?password=密码 
    /
</code></pre>
<p>建议填写<code>/</code>，ShareList将自动开启挂载向导，按指示填写用户名密码即可。</p>
<hr>
<h3 id="挂载和彩云">挂载和彩云</h3>
<p>由<a href="app/plugins/drive.caiyun.js">drive.caiyun.js</a>插件实现。</p>
<pre><code>挂载标示：cy
挂载内容：  
    //用户名/初始文件夹ID?password=密码 
    /
</code></pre>
<p>建议填写<code>/</code>，ShareList将自动开启挂载向导，按指示填写用户名密码即可。</p>
<hr>
<h3 id="挂载本地文件">挂载本地文件</h3>
<p>由<a href="app/plugins/drive.fs.js">drive.fs.js</a>插件实现。</p>
<pre><code>挂载标示：fs   
挂载内容：文件路径。
</code></pre>
<p><strong>注意：统一使用unix风格路径，例如 windows D盘 为 <code>/d/</code>。</strong></p>
<hr>
<h3 id="挂载github">挂载GitHub</h3>
<p>由<a href="plugins/drive.github.js">plugins/drive.github.js</a>插件实现。用于访问GitHub代码库。有以下两种挂载方式。</p>
<pre><code>挂载标示：github   
挂载内容： 
  username   
  username/repo
</code></pre>
<p><strong>注意：仅用于浏览，不支持 <code>git clone</code> 等git操作。</strong></p>
<hr>
<h3 id="挂载蓝奏云">挂载蓝奏云</h3>
<p>由<a href="drive.lanzou">plugins/drive.lanzou.js</a>插件实现。提供对<a href="https://www.lanzou.com/">蓝奏云</a>的访问支持。</p>
<pre><code>挂载标示：lanzou
挂载路径：  
  folderId  
  password@folderId
  自定义路径如 s/aaa111
</code></pre>
<p><strong>注意：<code>folderId</code>是分享链接中<code>bxxxxxx</code>部分。</strong></p>
<p>插件为 <code>mp4/jpg</code>等禁止上传的格式提供解析支持，只需在文件名后附加<code>ct</code>后缀即可。以mp4为例，将<code>xxx.mp4</code>命名为<code>xxx.mp4.ct</code>后再上传，插件将自动解析为mp4文件。<br>
插件可支持蓝奏自带的文件提取码功能。</p>
<hr>
<h3 id="挂载h5ai">挂载h5ai</h3>
<p>由<a href="plugins/drive.h5ai.js">drive.h5ai.js</a>插件实现，用于访问h5ai目录程序。</p>
<pre><code>挂载标示：h5ai   
挂载路径：http地址
</code></pre>
<p>例如： <code>h5ai:https://larsjung.de/h5ai/demo/</code></p>
<hr>
<h3 id="挂载webdav">挂载WebDAV</h3>
<p>由<a href="plugins/drive.webdav.js">drive.webdav.js</a>插件实现，用于访问WebDAV服务。</p>
<pre><code>挂载标示：webdav  
挂载路径：  
  https://webdavserver.com:1222/path   
  https://username:password@webdavserver.com:1222/path   
  https://username:password@webdavserver.com:1222/?acceptRanges=none
</code></pre>
<p><strong>注意：若服务端不支持断点续传，需追加<code>acceptRanges=none</code></strong></p>
<hr>
<h3 id="挂载sftp">挂载SFTP</h3>
<p>由<a href="plugins/drive.sftp.js">drive.sftp.js</a>插件实现，用于访问支持SSH文件传输协议的服务。</p>
<pre><code>挂载标示：sftp  
挂载路径：  
  //username:password@server:port/path   
</code></pre>
<hr>
<h3 id="虚拟目录">虚拟目录</h3>
<p>在需创建虚拟目录处新建<code>目录名.d.ln</code>文件。 其内容为<code>挂载标识:挂载路径</code>。<br>
指向本地<code>/root</code>的建虚拟目录</p>
<pre><code>fs:/root 
</code></pre>
<p>指向GoogleDrive的某个共享文件夹虚拟目录</p>
<pre><code>gd:0BwfTxffUGy_GNF9KQ25Xd0xxxxxxx 
</code></pre>
<p>系统内置了一种单文件虚拟目录系统，使用yaml构建，以<code>sld</code>作为后缀保存。参考<a href="example/sharelist_drive.sld">example/ShareListDrive.sld</a>。</p>
<hr>
<h3 id="虚拟文件">虚拟文件</h3>
<p>与虚拟目录类似，目标指向具体文件。<br>
在需创建虚拟文件处新建<code>文件名.后缀名.ln</code>文件。 其内容为<code>挂载标识:挂载路径</code>。<br>
如：创建一个<code>ubuntu_18.iso</code>的虚拟文件，请参考<a href="example">example/linkTo_download_ubuntu_18.iso.ln</a>。</p>
<hr>
<h3 id="目录加密">目录加密</h3>
<p>在需加密目录内新建 <code>.passwd</code> 文件，<code>type</code>为验证方式，<code>data</code>为验证内容。<br>
目前只支持用户名密码对加密（由<a href="app/plugins/auth.basic.js">auth.basic</a>插件实现）。<br>
例如：</p>
<pre><code class="language-yaml">type: basic 
data: 
  - user1:111111 
  - user2:aaaaaa 
</code></pre>
<p><code>user1</code>用户可使用密码<code>111111</code>验证，<code>user2</code>用户可使用密码<code>aaaaaa</code>验证。请参考<a href="example">example/secret_folder/.passwd</a>。</p>
<hr>
<h3 id="流量中转">流量中转</h3>
<p>后台管理，常规设置，将<code>中转（包括预览）</code>设为启用即可实现中转代理。设置<code>中转路径</code>可对指定的路径（含子路径）启用中转，留空表示对所有路径有效。<br>
<strong>注意，由于功能限制，以下挂载方式将强制使用中转模式：<br>
<code>OneDrive For Business（id挂载）、GoogleDriveAPI、GoogleDrive（id挂载）</code></strong></p>
<hr>
<h3 id="自定义中转">自定义中转</h3>
<p>在启用中转模式时，可在后台管理-&gt;常规设置中,设置中转服务器。设置后所有下载请求均将通过此服务器中转，目前支持<a href="proxy/cf-worker.js">cf-worker</a>。</p>
<h4 id="1-cf-worker">1. cf-worker</h4>
<p>从<a href="proxy/cf-worker.js">proxy/cf-worker.js</a>中复制脚本，修改<code>HOST</code>为sharelist的访问地址，<code>TOKEN</code>为管理后台的访问口令。以此为内容创建cf worker，之后将cf-worker地址(<code>https://**.workers.dev</code>)保存到sharelist后台。</p>
<p><strong>注意，由于Cloudflare限制，<code>HOST</code>必须是使用标准端口(80,443)的域名地址，例如 <code>http://example.com/</code>，因而你需要为运行sharelist的IP做域名解析，同时修改其运行端口为80或443（可在app/config.js中修改），强烈建议使用nginx进行代理。</strong></p>
<hr>
<h3 id="负载均衡">负载均衡</h3>
<p>由<a href="app/plugins/drive.lb.js">drive.lb.js</a>插件实现。用于将请求转发到多个对等的网盘。</p>
<pre><code>挂载标示：lb
挂载路径：  
  用;分割多个路径地址  
</code></pre>
<p>例如，已经在<code>http://localhost/a</code>和<code>http://localhost/b</code>路径上挂载了内容相同的两个网盘，需要将两者的请求其合并到<code>http://localhost/c</code>路径下，在后台虚拟路径处，选择LoadBalancer类型，挂载路径填写为<code>/a;/b</code>即可。</p>
<p><strong>注意：负载目录建立后，其目标目录将被自动隐藏（管理员模式可见）。</strong></p>
<h3 id="忽略文件类型">忽略文件类型</h3>
<p>后台管理，常规设置，<code>忽略文件类型</code>可定义忽略的文件类型。例如忽略图片：<code>jpg,png,gif,webp,bmp,jpeg</code>。</p>
<h3 id="显示readme">显示README</h3>
<p>后台管理，常规设置，将<code>显示README.md内容</code>设为启用，当前目录包含<code>README.md</code>时，将自动显示在页面。</p>
<h3 id="文件预览">文件预览</h3>
<p>后台管理，常规设置，将<code>详情预览</code>设为启用即可对特定文件进行预览。目前支持：</p>
<h4 id="文档类">文档类</h4>
<p>由<a href="plugins/drive.document.js">preview.document</a>插件实现，可预览md、word、ppt、excel。</p>
<h4 id="多媒体">多媒体</h4>
<p>由<a href="plugins/drive.media.js">preview.media</a>插件实现，可预览图片、音频、视频提供。<br>
后台管理，插件设置，<code>支持预览的视频后缀</code>可定义可预览视频类型。</p>
<h4 id="torrent">Torrent</h4>
<p>由<a href="plugins/drive.torrent.js">preview.torrent</a>插件实现，为种子文件提供在线预览。</p>
<h3 id="文件目录上传">文件目录上传</h3>
<p>在登录状态（页面顶部会出现上传按钮），可向 本地磁盘(fs)、OneDriveAPI(oda)、GoogleDriveAPI(gda) 上传文件/目录。<br>
目前处于实验性阶段，可能出现各类异常。</p>
<h3 id="webdav导出">WebDAV导出</h3>
<p>可将挂载源以WebDAV方式转出，目前支持列表、下载功能。可在 后台管理-&gt;常规设置里 设置webDAV路径。</p>
<h3 id="下载链接有效期">下载链接有效期</h3>
<p>后台管理，常规设置，设置<code>下载链接有效期</code>后，下载链接将在此时间段内有效。若要关闭此功能，请设置为0。</p>
<h3 id="验证码相关">验证码相关</h3>
<p>后台管理，常规设置，设置<code>验证码识别接口</code>后，可完成某些插件的自动打码，留空时系统默认使用<code>https://api.reruin.net/ocr</code>(tesseract，准确率一般) 完成打码。<br>
自定义该接口需接收如下请求，<code>{image:'base64 encoded image',type:'','lang':''}</code>。</p>
<h3 id="nginxcaddy反代注意事项">Nginx(Caddy)反代注意事项</h3>
<p>使用反代时，请添加以下配置。<br>
Nginx</p>
<pre><code class="language-ini">  proxy_set_header Host  $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  proxy_set_header Range $http_range;
  proxy_set_header If-Range $http_if_range;
  proxy_no_cache $http_range $http_if_range;
</code></pre>
<p>如果使用上传功能，请调整 nginx 上传文件大小限制。</p>
<pre><code>  client_max_body_size 8000m;
</code></pre>
<p>Caddy</p>
<pre><code class="language-ini">  header_upstream Host {host}
  header_upstream X-Real-IP {remote}
  header_upstream X-Forwarded-For {remote}
  header_upstream X-Forwarded-Proto {scheme}
</code></pre>
<h2 id="插件开发">插件开发</h2>
<p>待完善</p>
<h2 id="安装">安装</h2>
<h3 id="shell">Shell</h3>
<pre><code class="language-bash">bash install.sh
</code></pre>
<p>远程安装 / Netinstall</p>
<pre><code class="language-bash">wget --no-check-certificate -qO-  https://raw.githubusercontent.com/reruin/sharelist/master/netinstall.sh | bash
</code></pre>
<p>更新 / Update</p>
<pre><code class="language-bash">bash update.sh
</code></pre>
<h3 id="docker-support">Docker support</h3>
<pre><code class="language-bash">docker build -t yourname/sharelist .

docker run -d -v /etc/sharelist:/sharelist/cache -p 33001:33001 --name=&quot;sharelist&quot; yourname/sharelist
</code></pre>
<p>OR</p>
<pre><code class="language-bash">docker-compose up
</code></pre>
<p>访问 <code>http://localhost:33001</code><br>
WebDAV 目录 <code>http://localhost:33001/webdav</code></p>
<h3 id="heroku">Heroku</h3>
<figure data-type="image" tabindex="2"><a href="https://heroku.com/deploy?template=https://github.com/reruin/sharelist-heroku"><img src="https://www.herokucdn.com/deploy/button.png" alt="Deploy" loading="lazy"></a></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gridea如何使用站点地图(sitemap)]]></title>
        <id>https://www.qiantigers.top/post/gridea-sitemap/</id>
        <link href="https://www.qiantigers.top/post/gridea-sitemap/">
        </link>
        <updated>2020-07-31T15:30:14.000Z</updated>
        <content type="html"><![CDATA[<h2 id="百度和谷歌seo优化">百度和谷歌SEO优化</h2>
<p>为了加快百度和谷歌搜索引擎收录博客文章，往往需要手动提交sitemap，Gridea会自动生成站点地图，名为<code>atom.xml</code>，提交到对应位置即可。</p>
<h2 id="百度sitemap提交">百度sitemap提交</h2>
<p>登录注册<a href="https://ziyuan.baidu.com/">百度搜索资源平台</a>，过程可能会比较繁琐。</p>
<p>添加站点，在<code>数据引入</code>-<code>链接提交</code>-<code>自动提交</code>-<code>sitemap</code>处提交站点地图，例如：<code>https://www.qiantigers.top/sitemap/index.html</code>。</p>
<blockquote>
<p>补充：默认生成的atom.xml主要为SSR订阅使用，百度无法抓取，需要手动修改、添加一些文件。</p>
</blockquote>
<figure data-type="image" tabindex="1"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200731232925.png" alt="image-20200731232533212" loading="lazy"></figure>
<h3 id="自动提交">自动提交</h3>
<p>找到Gridea的文件夹（设置里的站点源文件路径），笔者自定义的路径为<code>F:\Gridea</code>，然后找到主题的templates文件夹下的<code>post.ejs</code>，我的位置示例（Next主题）：<code>F:\GitHub\themes\Next\templates\post.ejs</code>。把以下代码放在之前的任意位置即可。</p>
<pre><code> &lt;script&gt;
(function(){
    var bp = document.createElement('script');
    var curProtocol = window.location.protocol.split(':')[0];
    if (curProtocol === 'https') {
        bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';
    }
    else {
        bp.src = 'http://push.zhanzhang.baidu.com/push.js';
    }
    var s = document.getElementsByTagName(&quot;script&quot;)[0];
    s.parentNode.insertBefore(bp, s);
})();
&lt;/script&gt;
</code></pre>
<h3 id="手动提交sitemap">手动提交sitemap</h3>
<p>参照自动提交的文件位置，在<code>F:\GitHub\themes\Next\templates\</code>处创建一个sitemap.ejs，复制以下代码并保存，重新启动Gridea并同步即可得到符合百度要求的sitemap。</p>
<pre><code>&lt;%- sitemap() %&gt;&lt;%  -%&gt;
&lt;%
function sitemap(){
  let links=''
  site.posts.forEach(function(post){
    links+=post.link+'\n'
}) 
  return links
}%&gt;
</code></pre>
<p>生成的文件是html文件，以本站点为例，提交sitemap的链接为：</p>
<pre><code>https://www.qiantigers.top/sitemap/index.html
</code></pre>
<h2 id="谷歌sitemap提交">谷歌sitemap提交</h2>
<p>登录<a href="https://search.google.com/search-console">谷歌搜索控制台</a>添加站点，输入<code>atom.xml</code>并提交，谷歌的抓取速度很快。</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200731232908.png" alt="image-20200731232900854" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何在CentOS 7上安装VnStat网络监控]]></title>
        <id>https://www.qiantigers.top/post/vnstat/</id>
        <link href="https://www.qiantigers.top/post/vnstat/">
        </link>
        <updated>2020-07-30T15:33:54.000Z</updated>
        <content type="html"><![CDATA[<p>在本教程中，我们将向您介绍如何在CentOS 7服务器上安装和配置VnStat网络监控。对于那些不了解的人，VnStat是一款基于控制台的网络流量监控工具，适用于Linux和BSD。它允许用户维护所选接口的网络流量日志。在这个Vnstat工具中，接口带宽会自动降低。</p>
<p>本文假设您至少具有linux的基础知识，了解如何使用shell，最重要的是，您将自己的站点托管在您自己的VPS上。安装非常简单，假设您正在root帐户中运行，如果不是，您可能需要在命令中添加“sudo”以获取root权限。我将在CentOS 7服务器上逐步安装VnStat网络监控工具。</p>
<h2 id="vnstat功能">VnStat功能</h2>
<ul>
<li>多个输出选项。</li>
<li>生成png图形输出。</li>
<li>消耗部分系统资源。</li>
<li>同时监控多个网络接口。</li>
<li>按月，周，小时和天排序数据。</li>
<li>CPU使用率低</li>
</ul>
<blockquote>
<p>在CentOS 7上安装VnStat网络监控</p>
</blockquote>
<h3 id="步骤一首先您将需要为您的linux版本启用epel存储库包">步骤一：首先，您将需要为您的Linux版本启用<a href="http://idroot.net/tutorials/install-enable-epel-repo-centos-5-centos-6-centos-7/">EPEL存储库</a>包</h3>
<pre><code>yum -y install epel-release
yum -y update
</code></pre>
<h3 id="步骤二安装vnstat">步骤二：安装VnStat</h3>
<p>使用yum命令行实用程序在您的系统上安装vnstat包：</p>
<pre><code>yum -y install vnstat
</code></pre>
<p>一旦安装，启动并启用Vnstat服务：</p>
<pre><code>systemctl start vnstat
systemctl enable vnstat
chkconfig vnstat on
</code></pre>
<h3 id="步骤3使用vnstat命令行显示静态">步骤3：使用vnStat命令行显示静态</h3>
<p>使用vnstat命令行实用程序，您可以查看每天，每月和每小时的带宽统计信息。它还提供实时显示统计数据的选项：</p>
<pre><code>### Show Statistics for a day ###
vnstat -d

### Show Statistics for a Month ###
vnstat -m

### Show Statistics for a Hour ###
vnstat -h

### Show Statistics for a Real Time ###
vnstat -l

### For more available options you can use the --help ###
vnstat --help
</code></pre>
<h3 id="步骤四配置vnstat-php基于web的界面">步骤四：配置vnStat PHP基于Web的界面</h3>
<p>vnStat还提供基于PHP的Web界面来显示图形统计信息。为了设置vnStat Web界面，它需要在CentOS 7上<a href="http://idroot.net/tutorials/how-to-install-lamp-linux-apache-mariadb-php-on-centos-7/">安装LAMP堆栈</a>。</p>
<p>下载vnStat php代码使用下面给定的url。</p>
<pre><code>get http://www.sqweek.com/sqweek/files/vnstat_php_frontend-1.5.1.tar.gz
</code></pre>
<p>在Web访问目录中提取下载的归档文件，例如：<em>/var/www/html/</em>：</p>
<pre><code>  tar xzf vnstat_php_frontend-1.5.1.tar.gzmv vnstat_php_frontend-1.5.1 /var/www/html/
</code></pre>
<p>编辑config.php文件并设置以下参数：</p>
<pre><code>  $language = \&quot;en\&quot;;
  $iface_list = array(\&quot;eth0\&quot;, \&quot;sixxs\&quot;);
  $iface_title[\&quot;eth0\&quot;] = \&quot;Public Interface\&quot;;
  $vnstat_bin = \&quot;/usr/bin/vnstat\&quot;;
</code></pre>
<p>通过网络浏览器访问VnStat，打开您喜爱的浏览器并导航到http://yourdomain.com/或http//server-ip。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[适合建站的低延时VPS——咖啡主机]]></title>
        <id>https://www.qiantigers.top/post/cfhost/</id>
        <link href="https://www.qiantigers.top/post/cfhost/">
        </link>
        <updated>2020-07-29T14:38:39.000Z</updated>
        <summary type="html"><![CDATA[<p><strong>咖啡主机</strong> ：<a href="https://1ove.club/cfhost">www.cfhost.cn</a></p>
<p><a href="https://1ove.club/cfhost">咖啡主机</a>运营有3年时间的国内IDC商家，从6月18日开始到端午期间，月付系列的香港VPS主机以及美国洛杉矶VPS主机推出一次性7.5折优惠或者终身8.5折优惠码，优惠之后最低配置方案月付15元起。目前香港沙田BGP采用三网优化线路， 动态GIA回程优化线路，小带宽，比较适合流量较小的网站使用；美国20G高防机房天机盾硬件防CC，带三网CN2 GIA回程优化。另外购买美国A区半年付或者以上的用户，可免费领取天机盾独立面板权限，并且有教学教程，可自主控制防护策略。</p>
<figure data-type="image" tabindex="1"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200729222434.png" alt="image-20200729222431501" loading="lazy"></figure>
]]></summary>
        <content type="html"><![CDATA[<p><strong>咖啡主机</strong> ：<a href="https://1ove.club/cfhost">www.cfhost.cn</a></p>
<p><a href="https://1ove.club/cfhost">咖啡主机</a>运营有3年时间的国内IDC商家，从6月18日开始到端午期间，月付系列的香港VPS主机以及美国洛杉矶VPS主机推出一次性7.5折优惠或者终身8.5折优惠码，优惠之后最低配置方案月付15元起。目前香港沙田BGP采用三网优化线路， 动态GIA回程优化线路，小带宽，比较适合流量较小的网站使用；美国20G高防机房天机盾硬件防CC，带三网CN2 GIA回程优化。另外购买美国A区半年付或者以上的用户，可免费领取天机盾独立面板权限，并且有教学教程，可自主控制防护策略。</p>
<figure data-type="image" tabindex="1"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200729222434.png" alt="image-20200729222431501" loading="lazy"></figure>
<!-- more -->
<p>本次优惠活动仅月付和半年付可用优惠码，活动有效期至2020年8月6日</p>
<h3 id="优惠套餐1美国洛杉矶20g天机盾硬件上层封udp无视udp攻击防御线路特价vps">优惠套餐1：美国洛杉矶20G天机盾硬件上层封UDP无视UDP攻击防御线路特价VPS</h3>
<p>以下表格中VPS为美国洛杉矶20G高防数据中心，三网CN2 GIA回程优化，单IP独享20G防御，被打死2小时内恢复，并且带天机盾硬件防CC，上层封UDP，无视UDP攻击！每个月可以享受免费1次天机盾防C策略配置，超过1次以后每次收费10元。也可以选择独立天机盾操作面板，权限每个月仅需额外加30元，活动期间半年付或者以上可免费获取天机盾独立面板。（2048M以上版本才允许windows系统）：<br>
美国A区512M内存  1核CPU 20G+20G磁盘 400G流量 20Mbps带宽 原价20.88/月<br>
美国A区1G内存 1核CPU 20G+25G磁盘 600G流量 20Mbps带宽 原价28/月<br>
美国A区2G内存 2核CPU 20G+30G磁盘 800G流量 20Mbps带宽 原价38/月<br>
美国A区4G内存 4核CPU 20G+40G磁盘 1500G流量 20Mbps带宽 原价88/月<br>
美国精品网A区90折优惠码（续费同价）：2020CFHOST90<br>
洛杉矶A区测试站：http://lax.cfhost.cn</p>
<h3 id="优惠套餐2美国b区直连vps套餐">优惠套餐2：美国B区直连VPS套餐</h3>
<p>美国直连国内各大骨干网，延迟低，带宽口子大。咖啡主机家的美国直连是Psychz优化BGP线路。商家支持付费更换IP，更换一次IP，收费15元，同时支持购买额外IP，价格为10元/个/月。硬盘空间和网络流量也可以额外购买。（2048M以上版本才允许windows系统）：<br>
美国B区512M内存  1核CPU 20G+20G磁盘 800G流量 20Mbps带宽 原价15/月<br>
美国B区1G内存 1核CPU 20G+25G磁盘 800G流量 20Mbps带宽 原价22/月<br>
美国B区2G内存 2核CPU 20G+30G磁盘 1000G流量 20Mbps带宽 原价34/月<br>
美国B区4G内存 4核CPU 20G+50G磁盘 1800G流量 20Mbps带宽 原价68/月<br>
美国B区直连88折优惠码（续费同价）：2020CFHOST88<br>
洛杉矶B区测试站：http://lax20g.cfhost.cn/speedtest</p>
<h3 id="优惠套餐3香港沙田精品网vps套餐">优惠套餐3：香港沙田精品网VPS套餐</h3>
<p>香港沙田的VPS位于香港沙田火炭机房，直连国内各大骨干网，延迟低，适合建站。咖啡主机家的香港vps是BGP线路的。商家支持付费更换IP，更换一次IP，收费15元，同时支持购买额外IP，价格为10元/个/月。硬盘空间和网络流量也可以额外购买。（2048M以上版本才允许windows系统）：<br>
香港A区512M内存  1核CPU 20G+20G磁盘 400G流量 2Mbps带宽 原价20/月<br>
香港A区1G内存 1核CPU 20G+30G磁盘 500G流量 2Mbps带宽 原价26/月<br>
香港A区2G内存 2核CPU 20G+40G磁盘 600G流量 2Mbps带宽 原价42/月<br>
香港A区4G内存 4核CPU 20G+60G磁盘 800G流量 3Mbps带宽 原价88/月<br>
香港A区85折优惠码（续费同价）：2020CFHOST85</p>
<p>1、香港VPS服务器月付方案，沙田机房，标注的是原价；性价比较高的是1G内存方案，测试地址：14.192.48.157</p>
<table>
<thead>
<tr>
<th>香港-KVM-512M</th>
<th>香港-KVM-1G</th>
</tr>
</thead>
<tbody>
<tr>
<td>核心：1核</td>
<td>核心：1核</td>
</tr>
<tr>
<td>CPU内存：512MB</td>
<td>CPU内存：1GB</td>
</tr>
<tr>
<td>硬盘：20GB+20G</td>
<td>硬盘：20GB+30G</td>
</tr>
<tr>
<td>流量：400G</td>
<td>流量：500G</td>
</tr>
<tr>
<td>双向带宽：2Mbps</td>
<td>带宽：2Mbps</td>
</tr>
<tr>
<td>架构：KVM</td>
<td>架构：KVM</td>
</tr>
<tr>
<td>管理：SolusVM</td>
<td>管理：SolusVM</td>
</tr>
<tr>
<td>价格：20元/月</td>
<td>价格：26元/月</td>
</tr>
<tr>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;gid=17">购买链接</a></td>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;gid=17">购买链接</a></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>香港-KVM-2G</th>
<th>香港-KVM-4G</th>
</tr>
</thead>
<tbody>
<tr>
<td>核心：2核</td>
<td>核心：4核</td>
</tr>
<tr>
<td>CPU内存：2G</td>
<td>CPU内存：4GB</td>
</tr>
<tr>
<td>硬盘：20GB+40G</td>
<td>硬盘：20GB+60G</td>
</tr>
<tr>
<td>流量：600G</td>
<td>流量：800G</td>
</tr>
<tr>
<td>双向带宽：2Mbps</td>
<td>带宽：3Mbps</td>
</tr>
<tr>
<td>架构：KVM</td>
<td>架构：KVM</td>
</tr>
<tr>
<td>管理：SolusVM</td>
<td>管理：SolusVM</td>
</tr>
<tr>
<td>价格：42元/月</td>
<td>价格：88元/月</td>
</tr>
<tr>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;gid=17">购买链接</a></td>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;gid=17">购买链接</a></td>
</tr>
</tbody>
</table>
<p>2、洛杉矶精品A区方案，洛杉矶CERA机房KVM VPS服务器方案，标注的是原价，测试地址：23.225.195.11</p>
<table>
<thead>
<tr>
<th>洛杉矶CERA-KVM-512M</th>
<th>洛杉矶CERA-KVM-1024M</th>
</tr>
</thead>
<tbody>
<tr>
<td>核心：1核</td>
<td>核心：1核</td>
</tr>
<tr>
<td>CPU内存：512MB</td>
<td>CPU内存：1GB</td>
</tr>
<tr>
<td>硬盘：20GB+20G</td>
<td>硬盘：20GB+20G</td>
</tr>
<tr>
<td>流量：400G</td>
<td>流量：600G</td>
</tr>
<tr>
<td>双向上行端口 20Mbps</td>
<td>上行端口 20Mbps</td>
</tr>
<tr>
<td>架构：KVM</td>
<td>架构：KVM</td>
</tr>
<tr>
<td>管理：SolusVM</td>
<td>管理：SolusVM</td>
</tr>
<tr>
<td>价格：20.88元/月</td>
<td>价格：28元/月</td>
</tr>
<tr>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;pid=82">购买链接</a></td>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;pid=83">购买链接</a></td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>洛杉矶CERA-KVM-1500M</th>
<th>洛杉矶CERA-KVM-2G</th>
</tr>
</thead>
<tbody>
<tr>
<td>核心：2核</td>
<td>核心：4核</td>
</tr>
<tr>
<td>CPU内存：2GB</td>
<td>CPU内存：4GB</td>
</tr>
<tr>
<td>硬盘：20GB+20G</td>
<td>硬盘：20GB+40G</td>
</tr>
<tr>
<td>流量：800G</td>
<td>流量：1500G</td>
</tr>
<tr>
<td>双向上行端口 20Mbps</td>
<td>上行端口 20Mbps</td>
</tr>
<tr>
<td>架构：KVM</td>
<td>架构：KVM</td>
</tr>
<tr>
<td>管理：SolusVM</td>
<td>管理：SolusVM</td>
</tr>
<tr>
<td>价格：38元/月</td>
<td>价格：88元/月</td>
</tr>
<tr>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;pid=84">购买链接</a></td>
<td>传送：<a href="https://www.cfhost.cn/aff.php?aff=864&amp;pid=85">购买链接</a></td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux VPS使用Rclone挂载OneDrive为本地硬盘使用]]></title>
        <id>https://www.qiantigers.top/post/linux-rclone-onedrive/</id>
        <link href="https://www.qiantigers.top/post/linux-rclone-onedrive/">
        </link>
        <updated>2020-07-23T15:21:01.000Z</updated>
        <content type="html"><![CDATA[<p>这篇主要记录下 <strong><code>Rclone</code></strong> 挂载 <strong><code>OneDrive</code></strong> 的详细过程，方便以后使用；</p>
<h1 id="获取onedrive授权">获取OneDrive授权</h1>
<p>在Windows电脑上下载Rclone，下载地址：https://rclone.org/downloads 然后解压至D盘根目录，将文件夹重新命名为<code>rclone</code>，按下键盘Win+R，然后输入cmd，确定；在出现的命令框中依次输入以下命令：</p>
<pre><code>cd /d d:\rclone
rclone authorize &quot;onedrive&quot;
</code></pre>
<p>输入完成后会弹出网页，选择或输入你需要挂载的OneDrive网盘账号和密码，然后等待授权完成；</p>
<p>授权完成后回到刚才的命令符界面，此时会出现一大串授权字符；</p>
<pre><code>Paste the following into your remote machine ---&gt;
{&quot;access_token&quot;:&quot;xxx&quot;}       #这一大串就是我们的授权码，全部都要复制下来
&lt;---End paste
</code></pre>
<p>我们需要将得到的授权码记录下来，后面会用到（提示：授权码有效期为一小时）</p>
<p><strong>注意：记录的授权码需要包含字符头<code>{&quot;</code>和字符尾<code>&quot;}</code>都要复制下来；</strong></p>
<h1 id="linux安装rclone">Linux安装Rclone</h1>
<p>此脚本只适用于<code>Debian/Ubuntu</code>系统</p>
<p>安装脚本：</p>
<pre><code>wget https://www.moerats.com/usr/shell/rclone_debian.sh &amp;&amp; bash rclone_debian.sh
</code></pre>
<p>开始配置：</p>
<pre><code>rclone config
</code></pre>
<p>详细配置过程：</p>
<pre><code>e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; n    #选择n新建挂载任务
name&gt; SUN           #这里输入新挂载任务的名称，自行设定
Type of storage to configure.
Enter a string value. Press Enter for the default (&quot;&quot;).
Choose a number from below, or type in your own value
 1 / 1Fichier
   \ &quot;fichier&quot;
 2 / Alias for an existing remote
   \ &quot;alias&quot;
 3 / Amazon Drive
   \ &quot;amazon cloud drive&quot;
 4 / Amazon S3 Compliant Storage Provider (AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc)
   \ &quot;s3&quot;
 5 / Backblaze B2
   \ &quot;b2&quot;
 6 / Box
   \ &quot;box&quot;
 7 / Cache a remote
   \ &quot;cache&quot;
 8 / Citrix Sharefile
   \ &quot;sharefile&quot;
 9 / Dropbox
   \ &quot;dropbox&quot;
10 / Encrypt/Decrypt a remote
   \ &quot;crypt&quot;
11 / FTP Connection
   \ &quot;ftp&quot;
12 / Google Cloud Storage (this is not Google Drive)
   \ &quot;google cloud storage&quot;
13 / Google Drive
   \ &quot;drive&quot;
14 / Google Photos
   \ &quot;google photos&quot;
15 / Hubic
   \ &quot;hubic&quot;
16 / JottaCloud
   \ &quot;jottacloud&quot;
17 / Koofr
   \ &quot;koofr&quot;
18 / Local Disk
   \ &quot;local&quot;
19 / Mail.ru Cloud
   \ &quot;mailru&quot;
20 / Mega
   \ &quot;mega&quot;
21 / Microsoft Azure Blob Storage
   \ &quot;azureblob&quot;
22 / Microsoft OneDrive
   \ &quot;onedrive&quot;
23 / OpenDrive
   \ &quot;opendrive&quot;
24 / Openstack Swift (Rackspace Cloud Files, Memset Memstore, OVH)
   \ &quot;swift&quot;
25 / Pcloud
   \ &quot;pcloud&quot;
26 / Put.io
   \ &quot;putio&quot;
27 / QingCloud Object Storage
   \ &quot;qingstor&quot;
28 / SSH/SFTP Connection
   \ &quot;sftp&quot;
29 / Transparently chunk/split large files
   \ &quot;chunker&quot;
30 / Union merges the contents of several remotes
   \ &quot;union&quot;
31 / Webdav
   \ &quot;webdav&quot;
32 / Yandex Disk
   \ &quot;yandex&quot;
33 / http Connection
   \ &quot;http&quot;
34 / premiumize.me
   \ &quot;premiumizeme&quot;
Storage&gt; 22          #选择你需要挂载的网盘，这里OneDrive是22
** See help for onedrive backend at: https://rclone.org/onedrive/ **

Microsoft App Client Id
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_id&gt;           #直接回车
Microsoft App Client Secret
Leave blank normally.
Enter a string value. Press Enter for the default (&quot;&quot;).
client_secret&gt;       #直接回车
Edit advanced config? (y/n)
y) Yes
n) No
y/n&gt; n               #选择n回车
Remote config
Use auto config?
 * Say Y if not sure
 * Say N if you are working on a remote or headless machine
y) Yes
n) No
y/n&gt; n               #选择n回车
For this to work, you will need rclone available on a machine that has a web browser available.
Execute the following on your machine (same rclone version recommended) :
        rclone authorize &quot;onedrive&quot;
Then paste the result below:
result&gt; {&quot;access_token&quot;:&quot;xxx&quot;}      #这里粘贴刚才得到的授权码
Choose a number from below, or type in an existing value
 1 / OneDrive Personal or Business
   \ &quot;onedrive&quot;
 2 / Root Sharepoint site
   \ &quot;sharepoint&quot;
 3 / Type in driveID
   \ &quot;driveid&quot;
 4 / Type in SiteID
   \ &quot;siteid&quot;
 5 / Search a Sharepoint site
   \ &quot;search&quot;
Your choice&gt; 1          #选择1回车
Found 1 drives, please select the one you want to use:
0: OneDrive (business) id=xxx
Chose drive to use:&gt; 0  #这里选择给出的编号后回车，我的是0
Found drive 'root' of type 'business', URL: https://pqj-my.sharepoint.com/personal/xxx
Is that okay?
y) Yes
n) No
y/n&gt; y                  #选择y回车
--------------------
[SUN]
type = onedrive
token = {&quot;access_token&quot;:&quot;xxx&quot;}
drive_id = xxx
drive_type = business
--------------------
y) Yes this is OK
e) Edit this remote
d) Delete this remote
y/e/d&gt; y                #选择y回车
Current remotes:

Name                 Type
====                 ====
SUN                 onedrive

e) Edit existing remote
n) New remote
d) Delete remote
r) Rename remote
c) Copy remote
s) Set configuration password
q) Quit config
e/n/d/r/c/s/q&gt; q       #选择q保存并退出
</code></pre>
<h1 id="新建本地挂载文件夹">新建本地挂载文件夹</h1>
<pre><code>mkdir /home/OD
</code></pre>
<h1 id="挂载磁盘">挂载磁盘</h1>
<p>说明</p>
<pre><code>#/usr/bin/rclone mount DriveName:Folder LocalFolder \
下面整体代码中最上面的这条需要自己修改，不要直接复制，注意代码中有空格
DriveName       #配置时填写的name
Folder          #网盘里要挂载的文件夹名
LocalFolder     #本地要挂载的文件夹绝对路径
例：/usr/bin/rclone mount SUN:/我的文件 /home/OneDrive \
</code></pre>
<p>挂载</p>
<pre><code>#下面代码是一个整体，全部复制后粘贴运行
/usr/bin/rclone mount DriveName:Folder LocalFolder \
 --umask 0000 \
 --default-permissions \
 --allow-non-empty \
 --allow-other \
 --transfers 1 \
 --buffer-size 64M \
 --low-level-retries 200

#如果你还涉及到读取使用，比如使用H5ai等在线播放，就在后面多加上以下三条参数
--dir-cache-time 12h
--vfs-read-chunk-size 32M
--vfs-read-chunk-size-limit 1G
</code></pre>
<p>参数说明</p>
<pre><code>--transfers：该参数是最大同时传输任务数量，如果经常传输大文件，或CPU性能不佳，建议设置为单线程，也就是设置为“1”
--buffer-size：该参数为读取每个文件时的内存缓冲区大小，控制rclone上传和挂载的时候的内存占用
--low-level-retries：该参数为传输文件没速度的时候重试次数，没速度的时候，单个会自动睡眠10ms起，然后再重试
</code></pre>
<p>挂载成功后，输入<code>df -h</code>命令查看是否挂载成功；</p>
<h1 id="卸载磁盘">卸载磁盘</h1>
<pre><code>fusermount -qzu LocalFolder
</code></pre>
<p><code>LocalFolder</code>为本地挂载文件夹绝对路径</p>
<h1 id="设置自启动">设置自启动</h1>
<p>下载并编辑脚本</p>
<pre><code>wget https://www.moerats.com/usr/shell/rcloned &amp;&amp; nano rcloned
</code></pre>
<p>修改以下内容：</p>
<pre><code>NAME=&quot;&quot;  #rclone name名，及配置时输入的name
REMOTE=''  #远程文件夹，Google Drive网盘里的挂载的一个文件夹
LOCAL=''  #挂载地址，VPS本地挂载目录
</code></pre>
<p>设置自启</p>
<pre><code>apt-get install sudo -y
mv rcloned /etc/init.d/rcloned
chmod +x /etc/init.d/rcloned
update-rc.d -f rcloned defaults
bash /etc/init.d/rcloned start
</code></pre>
<h1 id="常用rclone命令">常用Rclone命令</h1>
<pre><code>### 文件上传
rclone copy /home/backup gdrive:backup  # 本地路径 配置名字:网盘文件夹路径
### 文件下载
rclone copy gdrive:backup /home/backup  # 配置名字:网盘文件夹路径 本地路径
### 新建文件夹
rclone mkdir gdrive:backup              # 配置名字:网盘文件夹路径
### 获取文件夹大小
rclone size gdrive:backup               # 配置名字:网盘文件夹路径

### 列表
rclone ls gdrive:backup
rclone lsl gdrive:backup # 比上面多一个显示上传时间
rclone lsd gdrive:backup # 只显示文件夹
### 挂载
rclone mount gdrive:mm /root/mm &amp;
### 卸载
fusermount -u  /root/mm

#### 其他 ####
#### https://softlns.github.io/2016/11/28/rclone-guide/
rclone config - 以控制会话的形式添加rclone的配置，配置保存在.rclone.conf文件中。
rclone copy - 将文件从源复制到目的地址，跳过已复制完成的。
rclone sync - 将源数据同步到目的地址，只更新目的地址的数据。   –dry-run标志来检查要复制、删除的数据
rclone move - 将源数据移动到目的地址。
rclone delete - 删除指定路径下的文件内容。
rclone purge - 清空指定路径下所有文件数据。
rclone mkdir - 创建一个新目录。
rclone rmdir - 删除空目录。
rclone check - 检查源和目的地址数据是否匹配。
rclone ls - 列出指定路径下所有的文件以及文件大小和路径。
rclone lsd - 列出指定路径下所有的目录/容器/桶。
rclone lsl - 列出指定路径下所有文件以及修改时间、文件大小和路径。
rclone md5sum - 为指定路径下的所有文件产生一个md5sum文件。
rclone sha1sum - 为指定路径下的所有文件产生一个sha1sum文件。
rclone size - 获取指定路径下，文件内容的总大小。.
rclone version - 查看当前版本。
rclone cleanup - 清空remote。
rclone dedupe - 交互式查找重复文件，进行删除/重命名操作。
重启：systemctl restart rclone
停止：systemctl stop rclone
状态：systemctl status rclone
</code></pre>
<h1 id="将命令挂载到后台运行">将命令挂载到后台运行</h1>
<p>挂载后台运行，Rclone的上传下载命令需要开着SSH，SSH断开后任务会中断，对于大文件不太方便，我们可以挂载到后台运行</p>
<pre><code>nohup 这里填写需要执行的命令，注意前后有空格 &amp;
</code></pre>
<p>查看进程PID</p>
<pre><code>ps -ef
</code></pre>
<p>结束进程PID</p>
<pre><code>kill -6 任务的PID
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[6盘 CLI工具操作指南]]></title>
        <id>https://www.qiantigers.top/post/sixpan-cli/</id>
        <link href="https://www.qiantigers.top/post/sixpan-cli/">
        </link>
        <updated>2020-07-23T15:04:25.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>目前正在开发中，部分功能可能会有巨变</p>
</blockquote>
<h2 id="安装">安装</h2>
<pre><code class="language-go">go get github.com/Mrs4s/six-cli
</code></pre>
<blockquote>
<p>也可从 <a href="https://github.com/Mrs4s/six-cli/releases">Releases</a> 直接下载二进制</p>
</blockquote>
<h2 id="使用方法">使用方法</h2>
<ul>
<li>待完善，目前尚未开发完成。</li>
</ul>
<h2 id="命令列表">命令列表</h2>
<h3 id="登录">登录</h3>
<pre><code class="language-shell">guest@six-pan:/$ login   #然后按提示操作即可
</code></pre>
<h3 id="切换工作目录">切换工作目录</h3>
<pre><code class="language-shell">mrs4s@six-pan:/$ cd target  # 进入子目录
mrs4s@six-pan:/target$ cd /target/sub/test  # 以完整路径切换目录
mrs4s@six-pan:/target/sub/test$ cd ..  # 返回上一层
mrs4s@six-pan:/target/sub$ cd ../../  # 向上返回N层
</code></pre>
<h3 id="获取当前工作目录">获取当前工作目录</h3>
<pre><code class="language-shell">mrs4s@six-pan:/$ pwd
/workdir/1
</code></pre>
<h3 id="列出文件">列出文件</h3>
<pre><code class="language-shell">mrs4s@six-pan:/$ ls  # 列出当前目录所有对象
dir1	dir2	file1	file2
mrs4s@six-pan:/$ ls -d  # 按文件夹过滤
dir1	dir2
mrs4s@six-pan:/$ ls /target  # 列出目标目录所有对象
dir1	file1
mrs4s@six-pan:/$ ls /target -R  # 遍历列出子目录对象 (鉴于负载考虑不递归子目录)
.:
dir1	file1
./dir1:
test1	test2
mrs4s@six-pan:/$ ls -a  # 输出文件详细信息
序号  创建时间             文件大小  文件名
0     2019-01-01 00:00:00 100.00GB  dir1
...
</code></pre>
<h3 id="下载文件文件夹">下载文件/文件夹</h3>
<pre><code class="language-shell">mrs4s@six-pan:/$ down file  # 下载文件
mrs4s@six-pan:/$ down dir  # 下载文件夹
mrs4s@six-pan:/$ down /dir/file  # 通过绝对路径下载文件
</code></pre>
<h3 id="创建文件夹">创建文件夹</h3>
<pre><code class="language-shell">mrs4s@six-pan:/$ mkdir dir  #在当前目录创建文件夹
mrs4s@six-pan:/$ mkdir /test/dir  #根据绝对路径创建文件夹
</code></pre>
<h3 id="删除文件文件夹">删除文件/文件夹</h3>
<pre><code class="language-shell">mrs4s@six-pan:/$ rm file -y  #删除文件/文件夹
mrs4s@six-pan:/$ rm file1 file2 dir -y  #删除多个文件/文件夹
</code></pre>
<h3 id="获取文件hash信息">获取文件hash信息</h3>
<pre><code class="language-shell">mrs4s@six-pan:/$ cksum file1 file2 
</code></pre>
<h3 id="预览文件">预览文件</h3>
<blockquote>
<p>目前仅支持文本文件和torrent文件的预览, 其他文件仅能返回属性信息</p>
</blockquote>
<pre><code class="language-shell">mrs4s@six-pan:/$ pw file
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux screen 命令详解]]></title>
        <id>https://www.qiantigers.top/post/linux-screen/</id>
        <link href="https://www.qiantigers.top/post/linux-screen/">
        </link>
        <updated>2020-07-22T12:31:06.000Z</updated>
        <content type="html"><![CDATA[<p><strong>一、背景</strong></p>
<p>系统管理员经常需要SSH 或者telent 远程登录到Linux 服务器，经常运行一些需要很长时间才能完成的任务，比如系统备份、ftp 传输等等。通常情况下我们都是为每一个这样的任务开一个远程终端窗口，因为它们执行的时间太长了。必须等待它们执行完毕，在此期间不能关掉窗口或者断开连接，否则这个任务就会被杀掉，一切半途而废了。</p>
<p><strong>二、简介</strong></p>
<p><strong>GNU Screen</strong>是一款由GNU计划开发的用于命令行终端切换的自由软件。用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。</p>
<p>GNU Screen可以看作是窗口管理器的命令行界面版本。它提供了统一的管理多个会话的界面和相应的功能。</p>
<ul>
<li>
<p><strong>会话恢复</strong></p>
</li>
<li>
<p><strong>多窗口</strong></p>
</li>
<li>
<p><strong>会话共享</strong></p>
</li>
</ul>
<p>GNU's Screen 官方站点：http://www.gnu.org/software/screen/</p>
<p><strong>三、语法</strong></p>
<p><code>screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s ][-S &lt;作业名称&gt;]</code></p>
<p><strong>参数说明</strong></p>
<p><code>-A 　将所有的视窗都调整为目前终端机的大小。</code><br>
<code>-d &lt;作业名称&gt; 　将指定的screen作业离线。</code><br>
<code>-h &lt;行数&gt; 　指定视窗的缓冲区行数。</code><br>
<code>-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。</code><br>
<code>-r &lt;作业名称&gt; 　恢复离线的screen作业。</code><br>
<code>-R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。</code><br>
<code>-s 　指定建立新视窗时，所要执行的shell。</code><br>
<code>-S &lt;作业名称&gt; 　指定screen作业的名称。</code><br>
<code>-v 　显示版本信息。</code><br>
<code>-x 　恢复之前离线的screen作业。</code><br>
<code>-ls或--list 　显示目前所有的screen作业。</code><br>
<code>-wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。</code></p>
<p><strong>四、常用screen参数</strong></p>
<p><code>screen -S yourname -&gt; 新建一个叫yourname的session</code><br>
<code>screen -ls -&gt; 列出当前所有的session</code><br>
<code>screen -r yourname -&gt; 回到yourname这个session</code><br>
<code>screen -d yourname -&gt; 远程detach某个session</code><br>
<code>screen -d -r yourname -&gt; 结束当前session并回到yourname这个session</code></p>
<p><strong>在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始。</strong><br>
<code>C-a ? -&gt; 显示所有键绑定信息</code><br>
<code>C-a c -&gt; 创建一个新的运行shell的窗口并切换到该窗口</code><br>
<code>C-a n -&gt; Next，切换到下一个 window</code><br>
<code>C-a p -&gt; Previous，切换到前一个 window</code><br>
<code>C-a 0..9 -&gt; 切换到第 0..9 个 window</code><br>
<code>Ctrl+a [Space] -&gt; 由视窗0循序切换到视窗9</code><br>
<code>C-a C-a -&gt; 在两个最近使用的 window 间切换</code><br>
<code>C-a x -&gt; 锁住当前的 window，需用用户密码解锁</code><br>
<code>C-a d -&gt; detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台/后台)都在继续执行，即使 logout 也不影响。</code><br>
<code>C-a z -&gt; 把当前session放到后台执行，用 shell 的 fg 命令则可回去。</code><br>
<code>C-a w -&gt; 显示所有窗口列表</code><br>
<code>C-a t -&gt; Time，显示当前时间，和系统的 load</code><br>
<code>C-a k -&gt; kill window，强行关闭当前的 window</code><br>
<code>C-a [ -&gt; 进入 copy mode，在 copy mode 下可以回滚、搜索、复制就像用使用 vi 一样</code><br>
<code>C-b Backward，PageUp</code><br>
<code>C-f Forward，PageDown</code><br>
<code>H(大写) High，将光标移至左上角</code><br>
<code>L Low，将光标移至左下角</code><br>
<code>0 移到行首</code><br>
<code>$ 行末</code><br>
<code>w forward one word，以字为单位往前移</code><br>
<code>b backward one word，以字为单位往后移</code><br>
<code>Space 第一次按为标记区起点，第二次按为终点</code><br>
<code>Esc 结束 copy mode</code><br>
<code>C-a ] -&gt; Paste，把刚刚在 copy mode 选定的内容贴上</code></p>
<p><strong>五、使用 screen</strong></p>
<p><strong>5.1 安装screen</strong></p>
<p>流行的Linux发行版（例如Red Hat Enterprise Linux）通常会自带screen实用程序，如果没有的话，可以从GNU screen的官方网站下载。</p>
<pre><code>[root@TS-DEV ~]# yum install screen
[root@TS-DEV ~]# rpm -qa|grep screen
screen-4.0.3-4.el5
[root@TS-DEV ~]#
</code></pre>
<p><strong>5.2 创建一个新的窗口</strong></p>
<p>安装完成后，直接敲命令screen就可以启动它。但是这样启动的screen会话没有名字，实践上推荐为每个screen会话取一个名字，方便分辨：</p>
<pre><code>[root@TS-DEV ~]# screen -S david 
</code></pre>
<p>screen启动后，会创建第一个窗口，也就是窗口No. 0，并在其中打开一个系统默认的shell，一般都会是bash。所以你敲入命令screen之后，会立刻又返回到命令提示符，仿佛什么也没有发生似的，其实你已经进入Screen的世界了。当然，也可以在screen命令之后加入你喜欢的参数，使之直接打开你指定的程序，例如：</p>
<pre><code>[root@TS-DEV ~]# screen vi david.txt
</code></pre>
<p>screen创建一个执行vi david.txt的单窗口会话，退出vi 将退出该窗口/会话。</p>
<p><strong>5.3 查看窗口和窗口名称</strong></p>
<p>打开多个窗口后，可以使用快捷键C-a w列出当前所有窗口。如果使用文本终端，这个列表会列在屏幕左下角，如果使用X环境下的终端模拟器，这个列表会列在标题栏里。窗口列表的样子一般是这样：</p>
<pre><code>0$ bash  1-$ bash  2*$ bash  
</code></pre>
<p>这个例子中我开启了三个窗口，其中*号表示当前位于窗口2，-号表示上一次切换窗口时位于窗口1。</p>
<p>Screen默认会为窗口命名为编号和窗口中运行程序名的组合，上面的例子中窗口都是默认名字。练习了上面查看窗口的方法，你可能就希望各个窗口可以有不同的名字以方便区分了。可以使用快捷键C-a A来为当前窗口重命名，按下快捷键后，Screen会允许你为当前窗口输入新的名字，回车确认。</p>
<p><strong>5.4 会话分离与恢复</strong></p>
<p>你可以不中断screen窗口中程序的运行而暂时断开（detach）screen会话，并在随后时间重新连接（attach）该会话，重新控制各窗口中运行的程序。例如，我们打开一个screen窗口编辑/tmp/david.txt文件：</p>
<pre><code>[root@TS-DEV ~]# screen vi /tmp/david.txt
</code></pre>
<p>之后我们想暂时退出做点别的事情，比如出去散散步，那么在screen窗口键入<code>C-a d</code>，Screen会给出detached提示：</p>
<p><strong>暂时中断会话</strong></p>
<figure data-type="image" tabindex="1"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200722204045.jpeg" alt="img" loading="lazy"></figure>
<p>半个小时之后回来了，找到该screen会话：</p>
<pre><code>[root@TS-DEV ~]# screen -ls
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200722204055.jpeg" alt="img" loading="lazy"></figure>
<p>重新连接会话：</p>
<pre><code>[root@TS-DEV ~]# screen -r 12865
</code></pre>
<p>一切都在。</p>
<p>当然，如果你在另一台机器上没有分离一个Screen会话，就无从恢复会话了。</p>
<p>这时可以使用下面命令强制将这个会话从它所在的终端分离，转移到新的终端上来：</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200722204106.jpeg" alt="img" loading="lazy"></figure>
<p><strong>5.5 清除dead 会话</strong></p>
<p>如果由于某种原因其中一个会话死掉了（例如人为杀掉该会话），这时screen -list会显示该会话为dead状态。使用screen -wipe命令清除该会话：</p>
<figure data-type="image" tabindex="4"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200722204115.jpeg" alt="img" loading="lazy"></figure>
<p><strong>5.6 关闭或杀死窗口</strong></p>
<p>正常情况下，当你退出一个窗口中最后一个程序（通常是bash）后，这个窗口就关闭了。另一个关闭窗口的方法是使用C-a k，这个快捷键杀死当前的窗口，同时也将杀死这个窗口中正在运行的进程。</p>
<p>如果一个Screen会话中最后一个窗口被关闭了，那么整个Screen会话也就退出了，screen进程会被终止。</p>
<p>除了依次退出/杀死当前Screen会话中所有窗口这种方法之外，还可以使用快捷键C-a :，然后输入quit命令退出Screen会话。需要注意的是，这样退出会杀死所有窗口并退出其中运行的所有程序。其实C-a :这个快捷键允许用户直接输入的命令有很多，包括分屏可以输入split等，这也是实现Screen功能的一个途径，不过个人认为还是快捷键比较方便些。</p>
<p><strong>六、screen 高级应用</strong></p>
<p><strong>6.1 会话共享</strong></p>
<p>还有一种比较好玩的会话恢复，可以实现会话共享。假设你在和朋友在不同地点以相同用户登录一台机器，然后你创建一个screen会话，你朋友可以在他的终端上命令：</p>
<pre><code>[root@TS-DEV ~]# screen -x
</code></pre>
<p>这个命令会将你朋友的终端Attach到你的Screen会话上，并且你的终端不会被Detach。这样你就可以和朋友共享同一个会话了，如果你们当前又处于同一个窗口，那就相当于坐在同一个显示器前面，你的操作会同步演示给你朋友，你朋友的操作也会同步演示给你。当然，如果你们切换到这个会话的不同窗口中去，那还是可以分别进行不同的操作的。</p>
<p><strong>6.2 会话锁定与解锁</strong></p>
<p>Screen允许使用快捷键C-a s锁定会话。锁定以后，再进行任何输入屏幕都不会再有反应了。但是要注意虽然屏幕上看不到反应，但你的输入都会被Screen中的进程接收到。快捷键C-a q可以解锁一个会话。</p>
<p>也可以使用C-a x锁定会话，不同的是这样锁定之后，会话会被Screen所属用户的密码保护，需要输入密码才能继续访问这个会话。</p>
<p><strong>6.3 发送命令到screen会话</strong></p>
<p>在Screen会话之外，可以通过screen命令操作一个Screen会话，这也为使用Screen作为脚本程序增加了便利。关于Screen在脚本中的应用超出了入门的范围，这里只看一个例子，体会一下在会话之外对Screen的操作：</p>
<pre><code>[root@TS-DEV ~]# screen -S sandy -X screen ping www.baidu.com
</code></pre>
<p>这个命令在一个叫做sandy的screen会话中创建一个新窗口，并在其中运行ping命令。</p>
<p><strong>6.4 屏幕分割</strong></p>
<p>现在显示器那么大，将一个屏幕分割成不同区域显示不同的Screen窗口显然是个很酷的事情。可以使用快捷键C-a S将显示器水平分割，Screen 4.00.03版本以后，也支持垂直分屏，快捷键是C-a |。分屏以后，可以使用C-a <tab>在各个区块间切换，每一区块上都可以创建窗口并在其中运行进程。</p>
<p>可以用C-a X快捷键关闭当前焦点所在的屏幕区块，也可以用C-a Q关闭除当前区块之外其他的所有区块。关闭的区块中的窗口并不会关闭，还可以通过窗口切换找到它。</p>
<figure data-type="image" tabindex="5"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200722204027.jpeg" alt="img" loading="lazy"></figure>
<p><strong>6.5 C/P模式和操作</strong></p>
<p>screen的另一个很强大的功能就是可以在不同窗口之间进行复制粘贴了。使用快捷键C-a <Esc>或者C-a [可以进入copy/paste模式，这个模式下可以像在vi中一样移动光标，并可以使用空格键设置标记。其实在这个模式下有很多类似vi的操作，譬如使用/进行搜索，使用y快速标记一行，使用w快速标记一个单词等。关于C/P模式下的高级操作，其文档的这一部分有比较详细的说明。</p>
<p>一般情况下，可以移动光标到指定位置，按下空格设置一个开头标记，然后移动光标到结尾位置，按下空格设置第二个标记，同时会将两个标记之间的部分储存在copy/paste buffer中，并退出copy/paste模式。在正常模式下，可以使用快捷键C-a ]将储存在buffer中的内容粘贴到当前窗口。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.jsdelivr.net/gh/qiantigers/p000i000c//PicGo/20200722204009.jpeg" alt="img" loading="lazy"></figure>
<p><strong>6.6 更多screen功能</strong></p>
<p>同大多数UNIX程序一样，GNU Screen提供了丰富强大的定制功能。你可以在Screen的默认两级配置文件/etc/screenrc和$HOME/.screenrc中指定更多，例如设定screen选项，定制绑定键，设定screen会话自启动窗口，启用多用户模式，定制用户访问权限控制等等。如果你愿意的话，也可以自己指定screen配置文件。</p>
<p>以多用户功能为例，screen默认是以单用户模式运行的，你需要在配置文件中指定multiuser on 来打开多用户模式，通过acl*（acladd,acldel,aclchg...）命令，你可以灵活配置其他用户访问你的screen会话。更多配置文件内容请参考screen的man页。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Internet Download Manager – 俄国大神制作 皮肤美化直装版]]></title>
        <id>https://www.qiantigers.top/post/IDM/</id>
        <link href="https://www.qiantigers.top/post/IDM/">
        </link>
        <updated>2020-07-03T10:50:08.000Z</updated>
        <content type="html"><![CDATA[<h2 id="此版是俄国大神最新制作的破解版相比国内的idm破解版来说有着更多的皮肤并且不需要注册机直接安装就是破解版">此版是俄国大神最新制作的破解版，相比国内的IDM破解版来说有着更多的皮肤，并且不需要注册机，直接安装就是破解版。</h2>
<ul>
<li>6.37下载链接→<a href="https://pan.qiantigers.top/one-share/Windows-APP/IDM/6.37/">🔗链接直达</a></li>
<li>6.36下载链接→<a href="https://pan.qiantigers.top/one-share/Windows-APP/IDM/6.36/">🔗链接直达</a></li>
<li>6.35下载链接→<a href="https://pan.qiantigers.top/one-share/Windows-APP/IDM/6.35/">🔗链接直达</a></li>
</ul>
<h3 id="idm浏览器插件">IDM浏览器插件：</h3>
<ul>
<li><a href="https://chrome.google.com/webstore/detail/idm-integration-module/ngpampappnmepgilojfohadhhmbhlaek">🔗Chrome浏览器插件</a></li>
<li><a href="https://getidmcc.com/">🔗Firefox浏览器插件</a></li>
</ul>
<h2 id="安装步骤">安装步骤：</h2>
<ol>
<li>
<p>双击打开exe程序，并点击next</p>
<figure data-type="image" tabindex="1"><img src="https://i2.tiimg.com/613109/078efd094ccfc02a.png" alt="" loading="lazy"></figure>
</li>
<li>
<p>继续next</p>
<figure data-type="image" tabindex="2"><img src="https://i2.tiimg.com/613109/18a97cd9a0156cfa.png" alt="" loading="lazy"></figure>
</li>
<li>
<p>使用默认路径或自行更换路径并点击next</p>
<figure data-type="image" tabindex="3"><img src="https://i2.tiimg.com/613109/40577fb11108ac2f.png" alt="" loading="lazy"></figure>
</li>
<li>
<p>标注红框位置可以选择皮肤，点击next进行安装</p>
<figure data-type="image" tabindex="4"><img src="https://i2.tiimg.com/613109/74e098fa54b1b24d.png" alt="" loading="lazy"></figure>
</li>
<li>
<p>安装好后，根据图中标注切换语言并重启idm</p>
<figure data-type="image" tabindex="5"><img src="https://i1.fuimg.com/613109/f9d781cd9cf9feab.png" alt="" loading="lazy"></figure>
</li>
<li>
<p>点击查看 – 工具栏进行皮肤的切换即可</p>
<figure data-type="image" tabindex="6"><img src="https://i1.fuimg.com/613109/ac51b4d68ee01f41.png" alt="" loading="lazy"></figure>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Aria2 + Rclone 实现 OneDrive、Google Drive 等网盘离线下载]]></title>
        <id>https://www.qiantigers.top/post/aria2-rclone/</id>
        <link href="https://www.qiantigers.top/post/aria2-rclone/">
        </link>
        <updated>2020-07-02T08:28:06.000Z</updated>
        <content type="html"><![CDATA[<h2 id="前言">前言</h2>
<p>Aria2 有一个配置项 <code>on-download-complete</code>，在下载完后执行一个脚本。当下载完成后 Aria2 会给脚本传递 3 个变量 <code>$1</code>、<code>$2</code>、<code>$3</code> 分别为 gid 、文件数量、文件路径。利用这个配置项和这些变量就可以实现很多功能，比如下载完成后调用 Rclone 进行上传操作。整个过程简单来说就是，Aria2 下载文件到 VPS ，完成后告诉 Rclone 将这个文件上传到网盘。理论上只要是 Rclone 支持的网盘，都可以按照这个思路来实现<s>伪</s>离线下载。</p>
<blockquote>
<p>如果你还没有合适的 VPS，推荐去看《<a href="https://www.qiantigers.top/post/frantech-buyvm/">便宜高性价比 VPS 推荐</a>》。<a href="https://1ove.club/vps">BuyMV</a>拥有无限流量的，G口宽带非常适合用来离线下载.</p>
</blockquote>
<h2 id="安装-aria2">安装 Aria2</h2>
<p>这里使用 <a href="https://github.com/P3TERX/aria2.sh">Aria2 一键安装管理脚本 增强版</a>，执行下面的代码下载并运行脚本，出现脚本操作菜单输入 <code>1</code> 开始安装。</p>
<pre><code class="language-none">wget -N git.io/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; ./aria2.sh
</code></pre>
<h2 id="安装和配置-rclone">安装和配置 Rclone</h2>
<p>RCLONE 官方提供了<a href="https://rclone.org/install/#script-installation">一键安装脚本</a>：</p>
<pre><code class="language-none">curl https://rclone.org/install.sh | sudo bash
</code></pre>
<p>安装完后，输入 <code>rclone config</code> 命令进入交互式配置选项，按照提示一步一步来进行操作即可。如果你一脸懵逼，可以去看《<a href="https://github.com/P3TERX/aria2.sh">Rclone 安装配置教程</a>》来了解配置的详细过程。</p>
<h2 id="配置自动上传脚本">配置自动上传脚本</h2>
<p><a href="https://github.com/P3TERX/aria2.sh">Aria2 一键安装管理脚本 增强版</a> 整合了 <a href="https://github.com/P3TERX/aria2.conf">Aria2 完美配置</a> ，安装后会附带一些列增强功能脚本，Rclone 自动上传脚本就是其中之一。由于默认不启用，所以需要手动启用。</p>
<ul>
<li>输入<code>nano /root/.aria2c/upload.sh</code>打开自动上传脚本进行编辑，脚本中有中文注释，按照自己的实际情况进行修改，一般只需要修改下面2个部分。</li>
</ul>
<pre><code class="language-none"># Rclone 配置时填写的网盘名(name)
DRIVE_NAME='Onedrive'
# 网盘目录。即上传目标路径，留空为网盘根目录，末尾不要有斜杠。
DRIVE_PATH='/DRIVEX/Download'
</code></pre>
<blockquote>
<p>如果你对 nano 编辑器不熟悉，可以去看《<a href="https://p3terx.com/archives/linux-nano-tutorial.html">Linux 下适合新手的文本编辑器 nano 使用教程</a>》</p>
</blockquote>
<ul>
<li>输入<code>nano /root/.aria2c/aria2.conf</code>打开 Aria2 配置文件进行修改。或使用<a href="https://github.com/P3TERX/aria2.sh">Aria2 一键安装管理脚本 增强版</a>中的手动修改选项打开配置文件进行修改。找到“下载完成后执行的命令”，把<code>clean.sh</code>替换为<code>upload.sh</code>。</li>
</ul>
<pre><code class="language-none"># 下载完成后执行的命令
on-download-complete=/root/.aria2c/upload.sh
</code></pre>
<ul>
<li>重启 Aria2</li>
</ul>
<pre><code class="language-none">service aria2 restart
</code></pre>
<h2 id="使用">使用</h2>
<p>当你进行完以上所有操作，现在下载文件就会自动上传至相应的网盘，本地的文件也会自动删除。</p>
<p>由于 Aria2 是命令行后端软件，需要配合前端 GUI 才能有更好的使用体验，对于从来没有接触过的萌新，建议去看《<a href="https://p3terx.com/archives/aria2-frontend-ariang-tutorial.html">Aria2 前端面板 AriaNg 使用教程</a>》来了解相关基础知识。</p>
<h2 id="遇到问题如何处理">遇到问题如何处理</h2>
<p>严格按照教程来进行操作不会遇到问题，如果有问题那一定是你自身的问题，请仔细阅读教程中的每一个字。</p>
<p><em>注：转载于 https://p3terx.com/archives/offline-download-of-onedrive-gdrive.html</em></p>
]]></content>
    </entry>
</feed>